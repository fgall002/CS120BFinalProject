#include <avr/io.h>
#include "io.c"

#define A0 ~PINA  & 0x01
//#define A3 ~PINA & 0x08

//global variables
static unsigned char start;
static unsigned char end;
unsigned char Pad;

//TEST CODE
unsigned char game_on;
unsigned short score;

//Enum
enum Start_Button_State{Start_Button_Start, Game_Off, Start_Release_Press, Game_On} Start_Button_State;
enum Pad_State{Pad_Start, Wait_Pressure, Down, Hold_Pressure}Pad_State;


//Tick Function

/*
            START_BUTTON_HANDALAR_TASK

*/


void Start_Button_Handler_Tick(){

  // Transition
  switch(Start_Button_State){
    case Start_Button_Start:
        start = 0;
        end = 1;
        game_on = 0;
        Start_Button_State = Game_Off;
      break;
    case Game_Off:
        if(!(A0)){
        Start_Button_State = Game_Off;
        }
        else if(A0){
          start = 1;
          end = 0;
          game_on = 1;
          Start_Button_State = Start_Release_Press;
        }
      break;
    case Start_Release_Press:
        if(A0){
          Start_Button_State = Start_Release_Press;
        }
        else if( !(A0) && start && !(end)){
          Start_Button_State = Game_On;
        }
        else if( !(A0) && !(start) && end){
          Start_Button_State = Game_Off;
        }
      break;
    case Game_On:
        if(!(A0) && !(end)){
          Start_Button_State =  Game_On;
        }
        else if(A0){
          end = 1;
          start = 0;
          game_on = 0;
          Start_Button_State = Start_Release_Press;
        }
      break;
    default:
      start = 1;
      end = 1;
      break;
  }

  //Action States
  switch(Start_Button_State){
    case Start_Button_Start:
      break;
    case Game_Off:
    LCD_DisplayString(1, "Game:");
    LCD_Cursor(9);
    LCD_WriteData(game_on + '0');
      break;
    case Start_Release_Press:
      break;
    case Game_On:
    LCD_DisplayString(1, "Game:");
    LCD_Cursor(9);
    LCD_WriteData(game_on + '0');
      break;
    default:
      break;
  }
}

int main(void){
  DDRA = 0x00; PORTA = 0xFF;
  DDRC = 0xFF; PORTC = 0x00;
  DDRD = 0xFF; PORTD = 0x00;

  LCD_init();

  while(1) {
    Start_Button_Handler_Tick();
  //  Pad_Tick();
  continue;}
}
